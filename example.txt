you've made it!
你成功了！
import socket
import re

def create_data_socket(data_address):
    data_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    data_socket.connect(data_address)
    return data_socket

def parse_pasv_response(response):
    match = re.search(r'(\d+),(\d+),(\d+),(\d+),(\d+),(\d+)', response)
    if match:
        host = '.'.join(match.group(1, 2, 3, 4))
        port = int(match.group(5)) * 256 + int(match.group(6))
        return host, port
    return None

def receive_file(control_socket, data_socket, filename):
    send_command(control_socket, f"RETR {filename}\r\n")
    
    with open(filename, 'wb') as file:
        while True:
            data = data_socket.recv(4096)
            if not data:
                break
            file.write(data)

def change_directory(control_socket, directory):
    send_command(control_socket, f"CWD {directory}\r\n")

def main():
    host = 'your_ftp_server_ip'
    port = 21

    control_socket = ftp_connect(host, port)

    send_command(control_socket, 'USER USERNAME\r\n')
    send_command(control_socket, 'PASS PASSWORD\r\n')

    # Change to the desired folder, replace 'example_directory' with the folder name
    change_directory(control_socket, 'example_directory')

    pasv_response = send_command(control_socket, 'PASV\r\n')
    data_address = parse_pasv_response(pasv_response)

    if data_address:
        data_socket = create_data_socket(data_address)

        # Example: Download a file named 'example.txt'
        receive_file(control_socket, data_socket, 'example.txt')

        data_socket.close()
    else:
        print("Error parsing PASV response")

    control_socket.close()

if __name__ == "__main__":
    main()
